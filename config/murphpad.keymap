/*
 * Copyright (c) 2021 Kyle McCreery
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

#define TIMEOUT 300

/* Layer Names*/
#define DEFAULT 0
#define FN      1


&encoder_1 {
	status = "okay";
};

&encoder_2 {
	status = "okay";
};

/* Combo Definitions*/
/ {
    combos {
        compatible = "zmk,combos";
        combo_btclr {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 6>;
            bindings = <&bt BT_CLR>;
        };
        combo_reset {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 3>;
            bindings = <&reset>;
        };
        combo_bootloader {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 2>;
            bindings = <&bootloader>;
        };
        combo_bt_nxt {
            timeout-ms = <TIMEOUT>;
            key-positions = <1 4>;
            bindings = <&bt BT_NXT>;
        };
    };

	sensors {
		compatible = "zmk,keymap-sensors";
		sensors = <&encoder_1 &encoder_2>;
	};
/* MACROS */

/ {
    macros {
        PAREN: paren {
            label = "Parenthesis Macro";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_tap &kp LPAR &kp RPAR &kp LEFT>
                ;
        };
    };
};



/* KEYMAP BELOW */

	keymap0: keymap {
		compatible = "zmk,keymap";

		default_layer {
		label = "default layer";
				
            bindings = <
                &none      &kp LCMD(SPACE)     &kp LA(SPACE)   &kp DOWN       &kp UP
                &none      &kp LCMD(Z)         &kp LCMD(BSPC)     &kp LCMD(C)      &kp LCMD(V)
                &none      &kp KP_N7           &kp KP_N8       &kp KP_N9   	    &trans
                &none      &kp KP_N4           &kp KP_N5       &kp KP_N6   	    &trans
                &mo 1      &kp KP_N1           &kp KP_N2       &kp KP_N3   	    &trans
                &kp BSPC   &kp KP_N0           &trans          &kp KP_DOT  	    &kp LC (LCMD(LA))
            >;
			sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;

        }; 
	
	

        fn_layer {
		label = "fn layer";
            bindings = <
                &trans      &trans     &trans        &trans          &trans  
                &trans      &kp KP_NUM &trans        &trans          &trans     
                &trans      &trans     &trans        &trans	         &trans
                &bt BT_CLR  &trans     &trans        &trans          &trans    
                &trans      &trans     &trans        &trans          &trans
                &kp DEL    	&trans     &trans        &trans          &trans           
            >;  
			sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp C_VOL_UP C_VOL_DN>;

        };
    };
};
